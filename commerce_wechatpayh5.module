<?php

/**
 * Implements hook_menu().
 */
function commerce_wechatpayh5_menu() {
    $items['admin/config/commerce_wechatpayh5/config'] = array(
        'title' => 'Wechat Pay H5',
        'description' => 'Configuration module page',
        'page callback' => 'drupal_get_form',
        'page arguments' => ['commerce_wechatpayh5_settings_form'],
        'access callback' => TRUE,
        'access arguments' => ['access adminstration page'],
        'type' => MENU_CALLBACK,
    );
    $items['commerce_wechatpayh5/%/notify-payh5'] = array(
        'title' => 'notify callback pay',
        'page callback' => 'commerce_wechatpayh5_notify',
        'page arguments' => ['orderId'],
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    $items['commerce_wechatpayh5/wechatpay-status'] = array(
        'title' => 'Wechat Payment Status',
        'page callback' => 'commerce_wechatpayh5_status',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    $items['commerce_wechatpayh5/order-complete'] = array(
        'title' => t('Order Complete'),
        'page callback' => 'commerce_wechatpayh5_order_complete',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    
    return $items;
}

/**
 * Implements hook_commerce_payment_method_info().
 */
function commerce_wechatpayh5_commerce_payment_method_info() {
    $payment_methods = array();
  
    $payment_methods['commerce_wechatpayh5'] = array(
        'base' => 'commerce_wechatpayh5',
        'title' => t('Wechat H5'),
        'short_title' => t('Unified Order'),
        'description' => t('Unified Order, Wechat Pay H5 API'),
        'terminal' => FALSE,
        'offsite' => TRUE,
        'offsite_autoredirect' => TRUE,
    );
    
    return $payment_methods;
}

function commerce_wechatpayh5_redirect_form($form, &$form_state, $order, $payment_method) {
    $settings = array(
        // Return to the previous page when payment is canceled
        'cancel_return' => url('checkout/' . $order->order_number . '/review', array('absolute' => TRUE)),
    
        // Return to the payment redirect page for processing successful payments
        'return' => url('checkout/' . $order->order_number . '/complete', array('absolute' => TRUE)),
      );
    
    return commerce_wechatpayh5_order_form($form, $form_state, $order, $payment_method['settings'] + $settings);
}

function commerce_wechatpayh5_order_form($form, &$form_state, $order, $settings) {
    $url = (isset($_SERVER['HTTPS']) ? "https" : "http") . "://$_SERVER[HTTP_HOST]"."/";
    $form['#action'] = $url.'commerce_wechatpayh5/'.$order->order_number.'/notify-payh5';
    // $form['#action'] = commerce_wechatpayh5_unifiedOrder($order->order_number, $order->commerce_order_total['und'][0]['amount'], 'This is a test payement');
    
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Proceed to Wechat'),
    );
    
    return $form;
}

function  commerce_wechatpayh5_submit_form($payment_method, $pane_values, $checkout_pane, $order) {

}

function commerce_wechatpayh5_form_commerce_checkout_form_alter(&$form, &$form_state) {

}

function commerce_wechatpayh5_process_notify() {

}

/**
 * Payment method callback: settings form.
 */
function commerce_wechatpayh5_settings_form($form, &$form_state) {
    $url = (isset($_SERVER['HTTPS']) ? "https" : "http") . "://$_SERVER[HTTP_HOST]"."/";

    $form['APPID'] = array(
        '#type' => 'textfield',
        '#title' => t('APPID'),
        '#description' => t('Write your <strong>APPID</strong>'),
        '#default_value' => variable_get('APPID'),
        '#required' => TRUE,
    );
    $form['MCHID'] = array(
        '#type' => 'textfield',
        '#title' => t('MCHID'),
        '#description' => t('Write your <strong>MCHID</strong>'),
        '#default_value' => variable_get('MCHID'),
        '#required' => TRUE,
    );
    $form['KEY'] = array(
        '#type' => 'textfield',
        '#title' => t('KEY'),
        '#description' => t('Write your <strong>KEY</strong>'),
        '#default_value' => variable_get('KEY'),
        '#required' => TRUE,
    );
    $form['APPSECRET'] = array(
        '#type' => 'textfield',
        '#title' => t('APPSECRET'),
        '#description' => t('Write your <strong>APPSECRET</strong>'),
        '#default_value' => variable_get('APPSECRET'),
        '#required' => TRUE,
    );
    $form['DEVMODE'] = array(
        '#type' => 'checkbox',
        '#title' => t('DEVMODE'),
        '#description' => t('Put the fee to <strong>00,01짜</strong>, for testing.'),
        '#default_value' => variable_get('DEVMODE'),
    );
  
  return system_settings_form($form);
}

function commerce_wechatpayh5_notify($value) {
    global $base_url;
    $id = arg(1);
    $order = commerce_order_load($id);
    $fee = $order->commerce_order_total['und'][0]['amount'];
    $url = commerce_wechatpayh5_unifiedOrder($order->order_number, $fee, 'Your order n째 '.$order->order_number.'.');
    $fee = intval($fee)/100;
    
    $path = drupal_get_path('module', 'commerce_wechatpayh5');
    drupal_add_js($path . '/js/commerce_wechatpayh5.js');

echo '<script src="'.$base_url.'/sites/all/modules/contrib/jquery_update/replace/jquery/1.10/jquery.min.js"></script>';
echo '<script src="'.$base_url.'/'.$path.'/js/commerce_wechatpayh5.js"></script>';
echo '<body>';

echo '<div style="width: 100%; height: 300px;">';
echo '<div style="height: 150px;"></div>';
echo '<div style="margin: auto; text-align: center">';
echo '<h2 style="font-family: Arial; font-size: 70; color: white">Order n째 '.$order->order_number.'</h2>';
echo '<h1 style="font-family: Arial; font-size: 60; color: white">total : '.$fee.' 짜</h1>';
echo '</div>';
echo '<div style="height: 150px;"></div>';
echo '<a href="'.$url.'" id="openpay" style="color: white; text-decoration: none;">';
echo '<div style="vertical-align: middle; margin: auto; height: 200px; width: 500px; background-color: #00c80f; text-align: center;">';
echo '<p style="font-family: Arial; font-size: 60;">';
//echo '<image src="https://cdn-www.bluestacks.com/bs-images/wechat_logo.png" style="width: 150px; height: 150px;"></image>';
echo ' PAY </p>';
echo '</div>';
echo '</a>';
echo '<div style="height: 490px;"></div>';
echo '<div style="text-align: center">';
echo '<a href="'.$base_url.'" style="font-family: Arial; text-decoration: none; text-decoration-color: red"><p style="font-size: 47; color: red;">Cancel</p></a>';
echo '</div>';
echo '</div>';

echo '<form id="wechatForm" method="POST" action="'.$base_url.'/commerce_wechatpayh5/order-complete">';
echo '<input type="hidden" value="'.$order->order_number.'" id="outtradeno" name ="out_trade_no"/>';
echo '<input type="hidden" value="'.$order->order_id.'" name ="orderid" id="orderid"/>';
echo '<input type="hidden" value="true" name ="orderstatus" id="status"/>';
echo '<input type="submit" value="Continue" id="wechatsubmit" style="display: none;"/>';
echo '</form>';
echo '</body>';

}

function commerce_wechatpayh5_status() {
    $out_trade_no = $_POST['outtradeno'];
    $result = commerce_wechatpayh5_orderQuery($out_trade_no);
    if(isset($result['trade_state'])){
        print $result['trade_state'];
    } else {
        print "false";
    }
}

function commerce_wechatpayh5_order_complete() {
    if (empty($_POST)) {
        watchdog('My Payment Gateway',
        'Received an empty or incomplete response.  Response details: @request_details',
        array('@request_details' =>  print_r($_POST,true)), WATCHDOG_ERROR);
    
        return 'There was a problem with your payment';
    }
    
    if ($_POST['orderstatus'] == 'true') {
        global $user;
        $order_id = $_POST['orderid'];
        $order = commerce_order_load($order_id);
        $amount = $order->commerce_order_total['und'][0]['amount'];
        $order->field_order_total['und'][0]['value'] = $amount/100;
        $tid = $order->field_checkout_delivery_time[LANGUAGE_NONE][0]['tid'];
        $last_delivery_time = db_query("SELECT name FROM {taxonomy_term_data} WHERE tid= :tid",array('tid' => $tid))->fetchField();
        $deliverydate = db_query("SELECT date FROM {delivery_date} WHERE order_id= :order_id",array('order_id' => $order->order_id))->fetchField();
        $lasttime = explode('-',$last_delivery_time);
        $lasttime1 = explode('.',$lasttime[0]);
        $seafooddate = date('Y-m-d',strtotime($deliverydate));
        $order->field_delivery_date_and_time[LANGUAGE_NONE][0]['value'] = $seafooddate.' '.$lasttime1[0].':00:00';
        
        commerce_order_save($order);
        if($_GET['admin'] == 1) {
            $status = 'completed_in_full';
        } else {
            $status = 'confirmed_completed';
        }
        commerce_order_status_update($order,$status);
        $transaction = commerce_payment_transaction_new('commerce_wechatpayh5', $order_id);
        $transaction->instance_id = 'commerce_wechatpayh5|commerce_payment_commerce_wechatpayh5';
    
        // Currently supports only transactions in CNY.
        $transaction->amount = commerce_currency_decimal_to_amount($order->commerce_order_total[LANGUAGE_NONE][0]['amount'], $order->commerce_order_total[LANGUAGE_NONE][0]['currency_code']);
        $transaction->currency_code = $order->commerce_order_total[LANGUAGE_NONE][0]['currency_code'];
    
        $transaction->remote_id = '';
          
        // Set the transaction's statuses based on notify's trade_status.          
        $transaction->remote_status = 'True';          
        $transaction->status = COMMERCE_PAYMENT_STATUS_SUCCESS;
        $transaction->message = 'The payment has completed.';
        //	print_r($transaction);
        commerce_payment_transaction_save($transaction);
        if ($_GET['admin'] == 1) {
            $order =  commerce_order_load($order_id);
        
            if (isset($order->commerce_line_items) && count($order->commerce_line_items) > 0) {
                $line_items = $order->commerce_line_items;
        
                foreach ($line_items['und'] as $key => $value) {
                    $line_item = commerce_line_item_load($value['line_item_id']);
                    if (isset($line_item->commerce_product)) {
                        $productid = $line_item->commerce_product[LANGUAGE_NONE][0]['product_id'];
    
                        //print $productid.'=='.$order_id; //exit;
                        db_insert('stock_order_data')
                        ->fields(array(
                            'product_id' => $productid,
                            'order_id' => $order_id,
                            ))
                            ->execute();
                        }
                    }
                }
                echo 'order/complete/'.$order_id;
                drupal_goto('order/complete/'.$order_id);
            } else {
                echo 'checkout/'.$order_id.'/complete';
                drupal_goto('checkout/'.$order_id.'/complete');
            }
            //return t('Your Order '.$order_id.' has been successfully completed');
        }
}

/*
** Weixin pay functions
*/
function commerce_wechatpayh5_unifiedOrder($out_trade_no, $total_fee, $body) {
    require_once "lib/WxPay.Api.php";
    $wxparams = new WxPayUnifiedOrder();

    $wxparams->SetTrade_type('MWEB');
    $wxparams->SetBody($body);
    $wxparams->SetOut_trade_no($out_trade_no);
    if (variable_get('DEVMODE') ==  1) {
        $wxparams->SetTotal_fee('1');
    } else {
        $wxparams->SetTotal_fee($total_fee);
    }

    $result = WxPayApi::unifiedOrder($wxparams);

    // return $result['notify_url'];
    return $result['mweb_url'];
}

function commerce_wechatpayh5_orderQuery($out_trade_no) {
    require_once "lib/WxPay.Api.php";
    $wxparams = new WxPayOrderQuery();

    // $wxparams->SetTransaction_id($out_trade_no);
    $wxparams->SetOut_trade_no($out_trade_no);

    $result = WxPayApi::orderQuery($wxparams);

    return $result;
}

function commerce_wechatpayh5_closeOrder($out_trade_no) {
    require_once "lib/WxPay.Api.php";
    $wxparams = new WxPayCloseOrder();

    $wxparams->SetOut_trade_no($out_trade_no);

    $result = WxPayApi::closeOrder($wxparams);

    return $result;
}

function commerce_wechatpayh5_refund($out_trade_no, $out_refund_no, $total_fee, $refund_fee, $op_user_id) {
    require_once "lib/WxPay.Api.php";
    $wxparams = new WxPayRefund();

    //Choose between transaction_id and out_trade_no
    // $wxparams->SetTransaction_id($out_trade_no)
    $wxparams->SetOut_trade_no($out_trade_no);
    $wxparams->SetOut_refund_no($out_refund_no);
    $wxparams->SetTotal_fee($total_fee);
    $wxparams->SetRefund_fee($refund_fee);
    $wxparams->SetOp_user_id($op_user_id);

    $result = WxPayApi::refund($wxparams);

    return $result;
}

function commerce_wechatpayh5_refundQuery($out_trade_no) {
    require_once "lib/WxPay.Api.php";
    $wxparams = new WxPayRefundQuery();

    //Choose between transaction_id, out_trade_no, out_refund_no and refund_id
    // $wxparams->SetTransaction_id($out_trade_no);
    $wxparams->SetOut_trade_no($out_trade_no);
    // $wxparams->SetOut_refund_no($out_trade_no);
    // $wxparams->SetRefund_id($out_trade_no);

    $result = WxPayApi::refundQuery($wxparams);

    return $result;
}

function commerce_wechatpayh5_downloadBill($bill_date) {
    require_once "lib/WxPay.Api.php";
    $wxparams = new WxPayDownloadBill();

    $wxparams->SetBill_date($bill_date);

    $result = WxPayApi::downloadBill($wxparams);

    return $result;
}

// function commerce_wechatpayh5_micropay() {
//     $wxparams = new WxPayWxPayMicroPay();

//     $result = WxPayApi::micropay($wxparams);
// }

// function commerce_wechatpayh5_reverse() {
//     $wxparams = new WxPayReverse();

//     $result = WxPayApi::reverse($wxparams);
// }

function commerce_wechatpayh5_report($sub_mch_id, $interface_url, $execute_time, $return_code, $result_code) {
    require_once "lib/WxPay.Api.php";
    $wxparams = new WxPayReport();

    $wxparams->SetSub_mch_id($sub_mch_id);
    $wxparams->SetInterface_url($interface_url);
    $wxparams->SetExecute_time($execute_time);
    $wxparams->SetReturn_code($return_code);
    $wxparams->SetResult_code($result_code);

    $result = WxPayApi::report($wxparams);

    return $result;
}